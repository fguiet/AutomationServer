FROM balenalib/raspberry-pi:stretch

LABEL maintainer="fguiet@gmail.com"

#Update stretch distribution
RUN apt-get clean
RUN apt-get update
RUN apt-get upgrade

#Install git
RUN apt-get install -y git

#Install nano
RUN apt-get install -y nano

#Install Open JDK 9
RUN apt-get install -y openjdk-9-jdk

#Install wget
RUN apt-get install -y wget

#Install jsvc
RUN apt-get install -y jsvc

#Install Gammu
RUN apt-get install -y gammu

#Install WiringPi
RUN apt-get install -y wiringpi

#RUN groupadd --gid 1000 fred
#RUN useradd  --uid 1000 --gid 1000 fred

#Create application source folder
RUN mkdir -p /applications/java/src 

#Set workdir
WORKDIR /applications/java/src

#Get Java Source
RUN git clone https://github.com/fguiet/AutomationServer.git

#Create application folder
RUN mkdir -p /applications/automationserver/config /applications/automationserver/logs /applications/automationserver/bin

#Create maven folder
RUN mkdir -p /applications/maven

WORKDIR /applications/maven

#Get Maven (http://maven.apache.org/download.cgi)
RUN wget http://mirrors.ircam.fr/pub/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
RUN tar -xzvf apache-maven-3.5.4-bin.tar.gz

#Set ENV
ENV M2_HOME=/applications/maven/apache-maven-3.5.4
ENV JAVA_HOME=/usr/lib/jvm/java-9-openjdk-armhf
ENV PATH=$PATH:$PGHOME/bin:$M2_HOME/bin:$JAVA_HOME/bin
#ENV LD_LIBRARY_PATH=/usr/lib/jvm/java-9-openjdk-armhf/lib:/usr/lib/jvm/java-9-openjdk-armhf/lib/server

#Build Source
WORKDIR /applications/java/src/AutomationServer/automationserver/ASParent
RUN mvn -Djavax.net.ssl.trustStorePassword=changeit -e clean package

#Copy Binaries
RUN rm -R -f /applications/automationserver/bin/*.jar
RUN cp /applications/java/src/AutomationServer/automationserver/ASMain/dist/automationserver-main-bin/lib/*.jar /applications/automationserver/bin/
RUN cp /applications/java/src/AutomationServer/third-party-lib/native/*.so /applications/automationserver/bin/

RUN mkdir /applications/automationserver/cmd

#RUN mv /applications/automationserver/config/start.sh /applications/automationserver/cmd
#RUN chmod u+x /applications/automationserver/cmd/start.sh

#RUN usermod -a -G sudo fred
#RUN usermod -a -G dialout fred
#RUN chown -R fred:fred /applications
#RUN echo "fred ALL=(ALL) NOPASSWD:ALL" | sudo tee -a /etc/sudoers

VOLUME ["/applications/automationserver/config","/applications/automationserver/bin","/applications/automationserver/logs","/applications/automationserver/cmd"]

COPY docker-entry-point.sh /usr/local/bin/
RUN chmod 555 /usr/local/bin/docker-entry-point.sh
ENTRYPOINT ["/usr/local/bin/docker-entry-point.sh"]
#ENTRYPOINT ["tail", "-f", "/dev/null"]

#In order to make jsvc works with OpenJDK ...not same folder construction than Oracle...

#See error without symlink...
#Found VM server definition in configuration
#Checking library /usr/lib/jvm/java-9-openjdk-armhf/jre/lib/arm/server/libjvm.so
#Checking library /usr/lib/jvm/java-9-openjdk-armhf/lib/arm/server/libjvm.so
#Cannot locate library for VM server (skipping)

RUN ln -s /usr/lib/jvm/java-9-openjdk-armhf/lib /usr/lib/jvm/java-9-openjdk-armhf/jre
RUN mkdir -p /usr/lib/jvm/java-9-openjdk-armhf/jre/lib/arm
RUN ln -s /usr/lib/jvm/java-9-openjdk-armhf/lib/server /usr/lib/jvm/java-9-openjdk-armhf/jre/lib/arm/server

#USER fred

#Image Entry point
CMD ["/bin/bash"]



